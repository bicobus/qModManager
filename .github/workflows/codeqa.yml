name: Code QA
on:
  push:
    branches-ignore:
      - 'dependabot/*'

jobs:
  CodeCov:
    if: "!contains(github.event.head_commit.message, '[ci skip]')"
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        python-version: ["3.8"]
    env:
      OS: ${{ matrix.os }}
      PYTHON: "3.8"
      QMM_CI: true
    steps:
      - uses: actions/checkout@v2
        with:
          path: qMM
      - uses: actions/checkout@v2
        with:
          repository: innoxia/liliths-throne-public
          path: lilith
          ref: dev
      - name: Cache pip
        uses: actions/cache@v2.1.3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-cachepip-${{ hashFiles('qMM/requirements.txt') }}
      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install Dependencies (linux)
        if: startsWith(matrix.os, 'ubuntu')
        working-directory: ${{ github.workspace }}/qMM
        # replace pyqt5 with latest version, workaround xcb bug
        run: |
          sudo apt-get update --fix-missing
          sudo apt-get install --fix-missing --no-install-recommends libegl1-mesa \
            libxkbcommon-x11-0 \
            libxcb-randr0-dev \
            libxcb-xtest0-dev \
            libxcb-xinerama0-dev \
            libxcb-shape0-dev \
            libxcb-xkb-dev \
            libxcb-icccm4 \
            libxcb-image0 \
            libxcb-keysyms1 \
            libxcb-render-util0 \
            qtbase5-dev
          python -m pip install --upgrade pip
          python -m pip install coverage[toml]
          sed -i 's/pyqt5==5.15.1/pyqt5==5.15.2/g' requirements.txt
          python -m pip install -r requirements.txt
          ldd /opt/hostedtoolcache/Python/3.8.7/x64/lib/python3.8/site-packages/PyQt5/Qt/plugins/platforms/libqxcb.so
          make ui
      - name: Install Dependencies (windows)
        if: startsWith(matrix.os, 'windows')
        working-directory: ${{ github.workspace }}/qMM
        run: |
          python -m pip install --upgrade pip
          python -m pip install codecov[toml]
          python -m pip install -r requirements.txt
          C:\msys64\bin\make ui
      - name: Create test environment
        shell: bash -l {0}
        working-directory: ${{ github.workspace }}/qMM
        run: bash -l .github/scripts/create_testenv.sh -q=${{ github.workspace }}/qMM -l=${{ github.workspace }}/lilith -r=${{ github.workspace }}/repo
      - name: Generate coverage report
        working-directory: ${{ github.workspace }}/qMM
        run: |
          QT_DEBUG_PLUGINS=1 coverage run ./run.py
          coverage xml
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ${{ github.workspace }}/qMM/coverage.xml
          env_vars: OS,PYTHON
          fail_ci_if_error: true
