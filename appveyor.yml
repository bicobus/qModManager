# Many thanks to relsqui and their examples: https://github.com/relsqui/matrix-repro/
version: "{branch}-{build}"
image: Visual Studio 2019
skip_branch_with_pr: true
clone_depth: 5
platform:
  - x64

skip_commits:
  files:
    - .deepsource.toml
    - docs/*

environment:
  PYTHON: C:\Python38-x64
  matrix:
    - JOB_NAME: release
      JOB_DESC: ""
    - JOB_NAME: beta
      JOB_DESC: ""
    - JOB_NAME: debug
      JOB_DESC: ""

for:
-
  branches:
    only:
      - debug
      - /debug-.*/
  matrix:
    only:
      - JOB_NAME: debug
  skip_tags: true
  deploy:
    - provider: GitHub
      name: Debug Builds
      release: qModManager-windows-$(APPVEYOR_REPO_COMMIT)-$(APPVEYOR_BUILD_VERSION)
      description: "Unstable build, use at your own risks."
      prerelease: true
      auth_token:
        secure: 9VzstVpyoCRNGlCcc9dIfoTYLTw9LBz5QDFkKg5qUqvT8Fk8bUTnOVSg5WCO7Fg7
      artifact: qModManager
-
  branches:
    only:
      - /v\d+\.\d+\.\d+-.+/
  matrix:
    only:
      JOB_NAME: beta
  skip_non_tags: true
  deploy:
    - provider: GitHub
      name: Beta Releases
      tag: $(APPVEYOR_REPO_TAG_NAME)
      prerelease: true
      auth_token:
        secure: 9VzstVpyoCRNGlCcc9dIfoTYLTw9LBz5QDFkKg5qUqvT8Fk8bUTnOVSg5WCO7Fg7
      artifact: qModManager
-
  branches:
    only:
      - /v\d+\.\d+\.\d+/
  matrix:
    only:
      JOB_NAME: release
  skip_non_tags: true
  deploy:
    - provider: GitHub
      name: Stable Releases
      tag: $(APPVEYOR_REPO_TAG_NAME)
      prerelease: true
      auth_token:
        secure: 9VzstVpyoCRNGlCcc9dIfoTYLTw9LBz5QDFkKg5qUqvT8Fk8bUTnOVSg5WCO7Fg7
      artifact: qModManager

branches:
  only:
    - /v\d+\.\d+\.\d+/
    - /v\d+\.\d+\.\d+-.+/
    - debug
    - /debug-.+/

init:
  - ps: >-
      if (($env:JOB_NAME -eq "release") -or ($env:JOB_NAME -eq "beta") -and ($env:APPVEYOR_REPO_TAG -like 'True')) {
        Write-Host "Not a release candidate, bailing."
        Exit-AppveyorBuild;
      }

cache:
  - '%LOCALAPPDATA%\pip\Cache\http'
  - '%LOCALAPPDATA%\pip\Cache\wheels'

install:
  - C:\cygwin\bin\du -hs '%LOCALAPPDATA%\pip\cache'
  # Add python and Scripts to the PATH
  - "SET PATH=%PYTHON%;%PYTHON%\\Scripts;C:\\cygwin\\bin\\;%PATH%"

  # Check version and architecture of python
  - python --version
  - python -c "import sys, platform, struct; print(sys.platform, platform.machine(),struct.calcsize('P')*8)"

  # Install dependencies
  - python -m pip install --disable-pip-version-check --upgrade pip
  # install build requirements (i.e. pyinstaller)
  - make .build/req 

build_script:
  - ps: Write-Host "Running $env:JOB_NAME job ($env:JOB_DESC)."
  - make ui
  - set PYTHONOPTIMIZE=1 && pyinstaller run.spec

after_build:
  - cd dist\qModManager\
  - 7z a ..\..\qModManager-win64.7z . ..\..\resources\README.txt

artifacts:
  - path: qModManager-win64.7z
    name: qModManager

# clean up pip cache, might not be needed
on_finish:
  - C:\cygwin\bin\find "%LOCALAPPDATA%\pip" -type f -mtime +360 -delete
  # - C:\cygwin\bin\find "%LOCALAPPDATA%\pip" -type f -size +10M -delete
  - C:\cygwin\bin\find "%LOCALAPPDATA%\pip" -empty -delete
  - C:\cygwin\bin\du -hs "%LOCALAPPDATA%\pip\Cache"

